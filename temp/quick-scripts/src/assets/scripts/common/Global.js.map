{"version":3,"sources":["assets/scripts/common/Global.ts"],"names":[],"mappings":";;;;;AACA,qBAAqB;AACrB,iDAAiD;AACjD,0BAA0B;AAC1B,UAAU;;;;;;;;;;;;;;;;;;;;;AAEV,kDAAuD;AACvD,0CAAqC;AACrC,wCAAmC;AACnC,qDAAiE;AACjE,yDAAoE;AAEpE,qBAAqB;AACrB,gCAAgC;AAChC,8BAA8B;AAC9B,oCAAoC;AACpC,iDAAiD;AACjD,kBAAkB;AAClB,KAAK;AACL,mBAAmB;AACnB,mDAAmD;AAE7C,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAoC,0BAAY;IAAhD;;IAmBA,CAAC;IAlBG,uBAAM,GAAN;QACI,IAAI,OAAO,GAAG,EAAE,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC;QAChD,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;QACvB,IAAM,YAAY,GAAG,UAAC,GAAgB;YAClC,eAAK,CAAC,QAAQ,CAAC,sBAAS,CAAC,GAAG,CAAC,CAAC,CAAA;YACtB,IAAA,IAAI,GAAK,GAAG,KAAR,CAAQ;YACpB,IAAI,IAAI,IAAI,2BAAe,CAAC,OAAO;gBAAE,OAAO;YAE5C,UAAU,CAAC;gBACP,eAAK,CAAC,QAAQ,CAAC,oBAAS,CAAC,qBAAU,CAAC,UAAU,CAAC,CAAC,CAAA;YACpD,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,CAAC,CAAA;QACD,cAAI,CAAC,EAAE,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;QAEnC,0CAA0C;IAE9C,CAAC;IAjBgB,MAAM;QAD1B,OAAO;OACa,MAAM,CAmB1B;IAAD,aAAC;CAnBD,AAmBC,CAnBmC,EAAE,CAAC,SAAS,GAmB/C;kBAnBoB,MAAM","file":"","sourceRoot":"/","sourcesContent":["\n// setTimeout(() => {\n//     connectWsgw(SERVICE_HOST).then((wsgw) => {\n//       // current userId\n//     });\n\nimport { ErrorHandleType } from \"../src/app/APIDefine\";\nimport store from \"../src/app/store\";\nimport wsgw from \"../src/app/wsgw\";\nimport { EAppPopups, pushPopup } from \"../src/features/SliceApp\";\nimport { IErrorHanle, pushError } from \"../src/features/SliceError\";\n\n// let closePID: any;\n// const scheduleClose = () => {\n//     clearTimeout(closePID);\n//     closePID = setTimeout(() => {\n//         window.location.href = 'mytel://back';\n//     }, 600000);\n// };\n// scheduleClose();\n// window.addEventListener('click', scheduleClose);\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Global extends cc.Component {\n    onLoad() {\n        var manager = cc.director.getCollisionManager();\n        manager.enabled = true;\n        const errorHanling = (err: IErrorHanle) => {\n            store.dispatch(pushError(err))\n            const { type } = err\n            if (type == ErrorHandleType.NOTHING) return;\n\n            setTimeout(() => {\n                store.dispatch(pushPopup(EAppPopups.PopupError))\n            }, 300);\n        }\n        wsgw.on(\"ELO_ERROR\", errorHanling);\n\n        // cc.dynamicAtlasManager.showDebug(true);\n\n    }\n\n}"]}