{"version":3,"sources":["assets/scripts/common/HorizontalScroll.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class HorizontalScroll extends cc.Component\n{\n\n    @property(cc.ScrollView) mainScroll: cc.ScrollView = null\n    // LIFE-CYCLE CALLBACKS:\n    public isVerticalMoving: boolean = false\n    static self()\n    {\n        return this;\n    }\n\n    // private _self = this\n\n    onLoad()\n    {\n        this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this, true)\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onTouchMoved, this, true)\n        this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnded, this, true)\n\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this._onTouchCancelled, this, true)\n        let scroll = this.getComponent(cc.ScrollView)\n        // scroll._onTouchBegan = this.overrideTouchBegan.bind(scroll)\n    }\n\n    start()\n    {\n\n    }\n    touchStart(event, captureListeners)\n    {\n\n        // this.isTouchDown = true\n    }\n    _onTouchMoved(event, captureListeners)\n    {\n        var touch = event.touch;\n        var deltaY = Math.abs(touch.getLocation().y - touch.getStartLocation().y);\n        var deltaX = Math.abs(touch.getLocation().x - touch.getStartLocation().x);\n        if(deltaX > deltaY && deltaX > 7)\n        {\n            this.isVerticalMoving = false\n            return;\n        }\n        if (deltaY > 7 && !this.isVerticalMoving)\n        {\n            this.isVerticalMoving = true\n            if (captureListeners && captureListeners.length >= 2)\n            {\n                captureListeners.shift()\n                captureListeners.unshift(this.mainScroll.node)\n            }\n            this.mainScroll._onTouchBegan(event, captureListeners);\n        }\n        else if (this.isVerticalMoving && deltaY > 7)\n        {\n            // event.stopPropagation();\n            if (captureListeners && captureListeners.length >= 2)\n            {\n                captureListeners.shift()\n                captureListeners.unshift(this.mainScroll.node)\n            }\n            this.mainScroll._onTouchMoved(event, captureListeners);\n        }\n    }\n    _onTouchCancelled(event, captureListeners)\n    {\n        if(this.isVerticalMoving)\n        {\n            if (captureListeners && captureListeners.length >= 2)\n            {\n                captureListeners.shift()\n                captureListeners.unshift(this.mainScroll.node)\n            }\n            this.mainScroll._onTouchCancelled(event, captureListeners);\n        }\n        // this.isVerticalMoving = false\n    }\n    _onTouchEnded(event, captureListeners)\n    {\n        if(this.isVerticalMoving)\n        {\n            if (captureListeners && captureListeners.length >= 2)\n            {\n                captureListeners.shift()\n                captureListeners.unshift(this.mainScroll.node)\n            }\n            this.mainScroll._onTouchEnded(event, captureListeners);\n        }\n        this.isVerticalMoving = false\n    }\n\n    // update (dt) {}\n}\n"]}