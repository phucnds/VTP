{"version":3,"sources":["assets/scripts/common/SoundMgr.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import SingletonNode from \"../utils/SingletonNode\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class SoundMgr extends SingletonNode<SoundMgr>()\n{\n  @property(cc.AudioClip) SFX_BUTTON: cc.AudioClip = null;\n  @property(cc.AudioClip) SFX_POPUP: cc.AudioClip = null;\n  @property(cc.AudioClip) SFX_SHOW_NUMBER: cc.AudioClip = null;\n  @property(cc.AudioClip) SFX_SPINNING: cc.AudioClip = null;\n  @property(cc.AudioClip) SFX_SPIN_TAP: cc.AudioClip = null;\n  @property(cc.AudioClip) BGM: cc.AudioClip = null;\n\n  static get IsMute() { return cc.audioEngine.getMusicVolume() == 0; }\n  static get IsMusicPlaying() { return cc.audioEngine.isMusicPlaying(); }\n\n  static playMusic(clip: cc.AudioClip, loop: boolean = true) {\n    if (SoundMgr.IsMusicPlaying) return;\n    cc.audioEngine.playMusic(clip, loop);\n  }\n\n  static playSfx(clip: cc.AudioClip, loop: boolean = false) {\n    cc.audioEngine.playEffect(clip, loop);\n  }\n\n  static pauseMusic() {\n    if (!this.Instance.BGM) return;\n    cc.audioEngine.pauseMusic();\n  }\n\n  static pauseAll() {\n    cc.audioEngine.pauseAll();\n  }\n\n  static stopMusic() {\n    cc.audioEngine.stopMusic();\n  }\n\n  static stopAllSfx() {\n    cc.audioEngine.stopAllEffects();\n  }\n\n  static stopAll() {\n    cc.audioEngine.stopAll();\n  }\n\n  static setMute(value: boolean = true) {\n    const volume = Number(!value);\n    this.setMusicVolume(volume);\n    this.setSfxVolume(volume);\n  }\n\n  static setMusicVolume(value) {\n    cc.audioEngine.setMusicVolume(value);\n  }\n\n  static getMusicVolume() {\n    return cc.audioEngine.getMusicVolume();\n  }\n\n  static setSfxVolume(value) {\n    cc.audioEngine.setEffectsVolume(value);\n  }\n\n  static toggleSound() {\n    this.setMute(!this.IsMute);\n  }\n  static fadeMusic(timer, type = \"fadeIn\", cb = null) {  // 0 = in, 1 : out\n    let node = new cc.Node('Sprite');\n    let initScale = 1;\n    node.setScale(initScale)\n    cc.tween(node)\n      .to(timer, { scale: 2 }, {\n        progress: (start, end, current, ratio) => {\n          cc.audioEngine.setMusicVolume(type == \"fadeIn\" ? ratio : 1 - ratio);\n          return start + (end - start) * ratio;\n        }\n      })\n      .call(() => cb && cb())\n      .start();\n  }\n  static fadeSfx(timer, type = \"fadeIn\", cb = null) { // 0 = in, 1 : out\n    let node = new cc.Node('Sprite');\n    let initScale = 1;\n    node.setScale(initScale)\n    cc.tween(node)\n      .to(timer, { scale: 2 }, {\n        progress: (start, end, current, ratio) => {\n          cc.audioEngine.setEffectsVolume(type == \"fadeIn\" ? ratio : 1 - ratio);\n          return start + (end - start) * ratio;\n        }\n      })\n      .call(() => cb && cb())\n      .start();\n  }\n}\n"]}