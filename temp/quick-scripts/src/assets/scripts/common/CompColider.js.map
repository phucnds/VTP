{"version":3,"sources":["assets/scripts/common/CompColider.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAE5E,IAAA,KAA2C,EAAE,CAAC,UAAU,EAAtD,OAAO,aAAA,EAAE,QAAQ,cAAA,EAAE,iBAAiB,uBAAkB,CAAC;AAI/D;IAAyC,+BAAY;IAArD;QACI,wBAAwB;QAD5B,qEA+BC;QA5BsB,4BAAsB,GAAc,EAAE,CAAC;;QAuB1D,oBAAoB;QACpB,IAAI;QACJ,4BAA4B;QAC5B,IAAI;QACJ,iBAAiB;IACrB,CAAC;IA1BG,sCAAgB,GAAhB,UAAiB,KAAqB;QAClC,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,eAAe;YAAE,OAAM;gCACrC,KAAK;YACV,IAAI,OAAK,sBAAsB,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,EAApB,CAAoB,CAAC;kCAAW;YAC1E,KAAK,CAAC,MAAM,GAAG,IAAI,CAAA;;;QAFvB,KAAkB,UAAkB,EAAlB,KAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAlB,cAAkB,EAAlB,IAAkB;YAA/B,IAAI,KAAK,SAAA;oBAAL,KAAK;SAGb;IACL,CAAC;IACD,qCAAe,GAAf,UAAgB,KAAK;QACjB,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,eAAe;YAAE,OAAM;QAC9C,KAAkB,UAAkB,EAAlB,KAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAlB,cAAkB,EAAlB,IAAkB,EAAE;YAAjC,IAAI,KAAK,SAAA;YACV,KAAK,CAAC,MAAM,GAAG,KAAK,CAAA;SACvB;IACL,CAAC;IACD,mCAAa,GAAb;QACI,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,WAAW,CAAC,CAAA;QAClD,IAAI,UAAU,EAAE;YACZ,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,MAAM,CAAA;YAC9C,UAAU,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YAChC,UAAU,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;SACrC;IACL,CAAC;IAtBkB;QAAlB,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;+DAAwC;IAHzC,WAAW;QAF/B,OAAO;QACP,iBAAiB;OACG,WAAW,CA+B/B;IAAD,kBAAC;CA/BD,AA+BC,CA/BwC,EAAE,CAAC,SAAS,GA+BpD;kBA/BoB,WAAW","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst { ccclass, property, executeInEditMode } = cc._decorator;\n\n@ccclass\n@executeInEditMode\nexport default class CompColider extends cc.Component {\n    // LIFE-CYCLE CALLBACKS:\n\n    @property(cc.Node) exceptChildernDeactive: cc.Node[] = [];\n\n    onCollisionEnter(other: cc.BoxCollider) {\n        if (other.node.name != \"main collider\") return\n        for (let child of this.node.children) {\n            if (this.exceptChildernDeactive.find(e => e.name == child.name)) continue;\n            child.active = true\n        }\n    }\n    onCollisionExit(other) {\n        if (other.node.name != \"main collider\") return\n        for (let child of this.node.children) {\n            child.active = false\n        }\n    }\n    updateBoxSize() {\n        let boxColider = this.getComponent(cc.BoxCollider)\n        if (boxColider) {\n            let height = this.node.getContentSize().height\n            boxColider.size.height = height;\n            boxColider.offset.y = -height / 2;\n        }\n    }\n    // onCollisionStay()\n    // {\n    //     console.log(\"stayyy\")\n    // }\n    // update (dt) {}\n}\n"]}