{"version":3,"sources":["assets/scripts/common/Localization.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAC5C,uCAAyC;AACzC,mCAA8B;AAE9B,IAAM,OAAO,GAAG,EAAE,CAAC;AACN,QAAA,iBAAiB,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACtD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,yBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC/C,OAAO,CAAC,yBAAiB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;CACrC;AAEY,QAAA,iBAAiB,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACrC,QAAA,cAAc,GAAG,EAAE,CAAC,IAAI,CAAC;IAClC,IAAI,EAAE,CAAC;IACP,KAAK,EAAE,CAAC;IACR,KAAK,EAAE,CAAC;CACX,CAAC,CAAC;AAGH;IAA0C,gCAAY;IAAtD;;IAgBA,CAAC;IAfU,+BAAkB,GAAzB,UAA0B,GAAW;QACjC,mCAAmC;QACnC,IAAI,MAAc,CAAC,QAAQ,IAAI,IAAI;YAAG,MAAc,CAAC,QAAQ,GAAG,IAAI,CAAA;QACpE,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE;YACd,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAE,MAAc,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC;SAC/E;QACD,OAAO,EAAE,CAAC;IACd,CAAC;IAEM,2BAAc,GAArB,UAAsB,QAAgB;QAClC,oEAAoE;QACpE,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAClC,MAAc,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACpC,gBAAM,CAAC,IAAI,CAAC,gBAAM,CAAC,oBAAoB,CAAC,CAAC;IAC7C,CAAC;IAfgB,YAAY;QADhC,OAAO;OACa,YAAY,CAgBhC;IAAD,mBAAC;CAhBD,AAgBC,CAhByC,EAAE,CAAC,SAAS,GAgBrD;kBAhBoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\nimport * as STRINGS from '../../strings';\nimport Events from './Events';\n\nconst enumObj = {};\nexport const LOCALIZATION_KEYS = Object.keys(STRINGS);\nfor (let i = 0; i < LOCALIZATION_KEYS.length; i++) {\n    enumObj[LOCALIZATION_KEYS[i]] = i;\n}\n\nexport const LOCALIZATION_ENUM = cc.Enum(enumObj);\nexport const TextTransforms = cc.Enum({\n    None: 0,\n    Upper: 1,\n    Lower: 2,\n});\n\n@ccclass\nexport default class Localization extends cc.Component {\n    static GetLocalizedString(key: string): string {\n        // (window as any).language = \"en\";\n        if((window as any).language == \"en\") (window as any).language = \"vi\"\n        if (STRINGS[key]) {\n            return STRINGS[key][((window as any).language || \"vi\").toUpperCase()] || '';\n        }\n        return '';\n    }\n\n    static ChangeLanguage(language: string) {\n        // localStorage.setItem(\"lang\", language == \"vi\" ? \"en\" : language);\n        localStorage.setItem(\"lang\", \"vi\");\n        (window as any).language = language;\n        Events.emit(Events.EventLanguageChanged);\n    }\n}"]}