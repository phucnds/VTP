{"version":3,"sources":["assets/scripts/components/CompHeader.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import FrameMgr from \"../common/FrameMgr\";\nimport SoundMgr from \"../common/SoundMgr\";\nimport { PageHome } from \"../Pages/PageHome\";\nimport connect from \"../src/app/connect\";\nimport store, { AppDispatch, RootState } from \"../src/app/store\";\nimport { EAppPages, EAppPopups, IPageWithEffect, popPage, pushPage, pushPopup } from \"../src/features/SliceApp\";\nimport Helper from \"../utils/Helper\";\n\nconst { ccclass, property, executeInEditMode } = cc._decorator;\n\nexport class CompHeader extends cc.Component {\n    actions: any;\n    props: any\n\n    @property(cc.Node)\n    public btnSound: cc.Node = null;\n    @property(cc.Sprite)\n    public btnSoundIcon: cc.Sprite = null;\n    @property(cc.Node)\n    public btnBack: cc.Node = null;\n\n    onLoad() {\n        const isMute = localStorage.getItem('mute');\n        // SoundMgr.setMute(isMute === 'true');\n        // this.btnSound.getComponent(cc.Button).interactable = isMute === 'false'\n        this.btnSoundIcon.spriteFrame = isMute === 'true' ? FrameMgr.Instance.ICON_SOUND_OFF : FrameMgr.Instance.ICON_SOUND\n\n        this.btnBack.on(cc.Node.EventType.TOUCH_END, () => {\n            SoundMgr.playSfx(SoundMgr.Instance.SFX_BUTTON);\n            // store.dispatch(pushPopup(EAppPopups.PopupExitGame));\n\n            if ((<any>window).ReactNativeWebView) {\n                (<any>window).ReactNativeWebView.postMessage('ON_EXIT_GAME', '*')\n            } else {\n                window.postMessage('ON_EXIT_GAME', '*')\n            }\n        });\n\n        this.btnSound.on(cc.Node.EventType.TOUCH_END, () => {\n            SoundMgr.playSfx(SoundMgr.Instance.SFX_BUTTON);\n            const muteSetting = localStorage.getItem('mute');\n            const newMuteSetting = muteSetting === 'false';\n            SoundMgr.setMute(newMuteSetting);\n            // this.btnSound.getComponent(cc.Button).interactable = !newMuteSetting;\n            this.btnSoundIcon.spriteFrame = newMuteSetting ? FrameMgr.Instance.ICON_SOUND_OFF : FrameMgr.Instance.ICON_SOUND\n            localStorage.setItem('mute', newMuteSetting ? 'true' : 'false');\n        });\n    }\n\n    protected update(dt: number): void {\n        const isMute = localStorage.getItem('mute');\n        SoundMgr.setMute(isMute === 'true');\n    }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    user: state.user,\n})\nconst mapDispatchToAction = (dispatch: AppDispatch) => ({\n    pushPage: (payload: EAppPages | IPageWithEffect) =>\n        dispatch(pushPage(payload)),\n    popPage: () => dispatch(popPage()),\n    pushPopup: (payload: EAppPopups) => dispatch(pushPopup(payload)),\n})\nexport default connect(mapStateToProps, mapDispatchToAction)(CompHeader)\n"]}