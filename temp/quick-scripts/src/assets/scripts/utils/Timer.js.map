{"version":3,"sources":["assets/scripts/utils/Timer.ts"],"names":[],"mappings":";;;;;;AAAA;IAAA;QACU,UAAK,GAAW,CAAC,CAAC;QAClB,aAAQ,GAAW,CAAC,CAAC;QACrB,aAAQ,GAAW,CAAC,CAAC;QACrB,WAAM,GAAY,IAAI,CAAC;IA0DjC,CAAC;IAxDC,2BAAW,GAAX,UAAa,QAAQ;QACnB,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,2BAAW,GAAX;QACE,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,uBAAO,GAAP;QACE,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,0BAAU,GAAV;QACE,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;IACpC,CAAC;IAED,qBAAK,GAAL;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,sBAAM,GAAN;QACE,OAAO,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC;IAC1B,CAAC;IAED,6BAAa,GAAb;QACE,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;YAClB,OAAO,KAAK,CAAC;SACd;QACD,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO,KAAK,CAAC;SACd;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,2BAAW,GAAX;QACE,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,sBAAM,GAAN,UAAQ,EAAE;QACR,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;YACpB,OAAO;SACR;QAED,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;QACjB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;YAClB,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;YAC5B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;IACH,CAAC;IACH,YAAC;AAAD,CA9DA,AA8DC,IAAA","file":"","sourceRoot":"/","sourcesContent":["export default class Timer {\n  private timer: number = 0;\n  private duration: number = 0;\n  private overhead: number = 0;\n  private isDone: boolean = true;\n\n  SetDuration (duration) {\n    this.timer = duration;\n    this.duration = duration;\n    this.overhead = 0;\n    this.isDone = false;\n  }\n\n  GetDuration () {\n    return this.duration;\n  }\n\n  GetTime () {\n    return this.timer;\n  }\n\n  GetPercent () {\n    return this.timer / this.duration;\n  }\n\n  Reset () {\n    this.timer = this.duration;\n    this.overhead = 0;\n    this.isDone = false;\n  }\n\n  IsDone () {\n    return this.timer === 0;\n  }\n\n  FirstFinished () {\n    if (this.timer > 0) {\n      return false;\n    }\n    if (this.isDone) {\n      return false;\n    }\n\n    this.isDone = true;\n    return true;\n  }\n\n  GetOverhead () {\n    return this.overhead;\n  }\n\n  Update (dt) {\n    if (this.timer === 0) {\n      return;\n    }\n\n    this.timer -= dt;\n    if (this.timer < 0) {\n      this.overhead = -this.timer;\n      this.timer = 0;\n    }\n  }\n}\n"]}