{"version":3,"sources":["assets/scripts/utils/ResizeSprite.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\nconst { ccclass, property } = cc._decorator\n\nconst ResizeSpriteModes = cc.Enum({\n  WIDTH: 0,\n  HEIGHT: 1,\n  BOTH: 2,\n})\n\n@ccclass\nexport default class ResizeSprite extends cc.Component {\n  @property({ type: ResizeSpriteModes }) private MatchMode: number = 0\n  @property(cc.Boolean) private UseUpdateMethod: boolean = false\n\n  private mInitWidth: number\n  private mInitHeight: number\n  private mInitSpriteWidth: number\n  private mInitSpriteHeight: number\n\n  onLoad() {\n    this.getComponent(cc.Sprite).sizeMode = cc.Sprite.SizeMode.CUSTOM\n    this.mInitWidth = this.node.width\n    this.mInitHeight = this.node.height\n    const rect = this.getComponent(cc.Sprite).spriteFrame.getRect()\n    this.mInitSpriteWidth = rect.width\n    this.mInitSpriteHeight = rect.height\n  }\n\n  onEnable() {\n    this.resize()\n  }\n\n  update(dt) {\n    if (this.UseUpdateMethod) {\n      this.resize()\n    }\n  }\n\n  private resize() {\n    if (!this.getComponent(cc.Sprite).spriteFrame) {\n      return\n    }\n\n    const rect = this.getComponent(cc.Sprite).spriteFrame.getRect()\n    let width = this.mInitWidth\n    let height = this.mInitHeight\n\n    switch (this.MatchMode) {\n      case ResizeSpriteModes.WIDTH:\n        width = this.mInitWidth\n        height = width * (rect.height / rect.width)\n        if (height > this.mInitSpriteHeight) {\n          height = this.mInitSpriteHeight\n          width = height * (rect.width / rect.height)\n        }\n        break\n      case ResizeSpriteModes.HEIGHT:\n        height = this.mInitHeight\n        width = height * (rect.width / rect.height)\n        if (width > this.mInitSpriteWidth) {\n          width = this.mInitSpriteWidth\n          height = width * (rect.height / rect.width)\n        }\n        break\n      case ResizeSpriteModes.BOTH:\n        break\n\n    }\n\n    this.node.width = width\n    this.node.height = height\n  }\n}\n"]}