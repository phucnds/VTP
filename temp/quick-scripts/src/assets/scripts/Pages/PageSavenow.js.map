{"version":3,"sources":["assets/scripts/Pages/PageSavenow.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;;AAElF,+CAA0C;AAE1C,kDAA6C;AAC7C,8CAAyC;AACzC,0CAAiE;AACjE,wCAAmC;AAEnC,qDAAkI;AAClI,iEAAqF;AAErF,+BAA0B;AAEpB,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAE5C;IAAiC,+BAAI;IAArC;QAAA,qEA2BC;QAtBU,gBAAU,GAAY,IAAI,CAAC;;IAsBtC,CAAC;IApBG,4BAAM,GAAN;QAAA,iBAeC;QAdG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;YAC5C,IAAI,KAAI,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,YAAY,KAAK,KAAK;gBAAE,OAAO;YAE3E,KAAI,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,YAAY,GAAG,KAAK,CAAC;YAC7D,kBAAQ,CAAC,OAAO,CAAC,kBAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YAC/C,cAAI,CAAC,WAAW,CAAC,mBAAS,CAAC,gBAAgB,EAAE,EAAE,EAAE,UAAC,CAAC;gBAC/C,eAAK,CAAC,QAAQ,CAAC,kBAAO,EAAE,CAAC,CAAC;gBAC1B,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,oCAAmB,CAAC,+BAAc,CAAC,yBAAyB,CAAC,CAAC,CAAC;gBAChH,KAAI,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;YAChE,CAAC,EAAE;gBACC,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC,qBAAU,CAAC,sBAAsB,CAAC,CAAC;gBAC1D,KAAI,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;YAChE,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAES,+BAAS,GAAnB;QACI,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;IAChE,CAAC;IArBD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;mDACgB;IAsBtC,kBAAC;CA3BD,AA2BC,CA3BgC,cAAI,GA2BpC;AA3BY,kCAAW;AA4BxB,IAAM,eAAe,GAAG,UAAC,KAAgB,IAAK,OAAA,CAAC;IAC3C,IAAI,EAAE,KAAK,CAAC,IAAI;IAChB,SAAS,EAAE,KAAK,CAAC,SAAS;CAC7B,CAAC,EAH4C,CAG5C,CAAA;AACF,IAAM,mBAAmB,GAAG,UAAC,QAAqB,IAAK,OAAA,CAAC;IACpD,QAAQ,EAAE,UAAC,OAAoC;QAC3C,OAAA,QAAQ,CAAC,mBAAQ,CAAC,OAAO,CAAC,CAAC;IAA3B,CAA2B;IAC/B,OAAO,EAAE,cAAM,OAAA,QAAQ,CAAC,kBAAO,EAAE,CAAC,EAAnB,CAAmB;IAClC,SAAS,EAAE,UAAC,OAAmB,IAAK,OAAA,QAAQ,CAAC,oBAAS,CAAC,OAAO,CAAC,CAAC,EAA5B,CAA4B;CACnE,CAAC,EALqD,CAKrD,CAAA;AACF,kBAAe,iBAAO,CAAC,eAAe,EAAE,mBAAmB,CAAC,CAAC,WAAW,CAAC,CAAA","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport SoundMgr from \"../common/SoundMgr\";\nimport { Missions } from \"../components/CompQuestsContainer\";\nimport APIDefine from \"../src/app/APIDefine\";\nimport connect from \"../src/app/connect\";\nimport store, { RootState, AppDispatch } from \"../src/app/store\";\nimport wsgw from \"../src/app/wsgw\";\nimport { randomString } from \"../src/common/utils\";\nimport { EAppPages, IPageWithEffect, pushPage, popPage, EAppPopups, pushPopup, PAGE_SHOW_EFFECT } from \"../src/features/SliceApp\";\nimport { DeeplinkTypesToName, EDeeplinkTypes } from \"../src/features/SliceDeeplinks\";\nimport Helper from \"../utils/Helper\";\nimport Page from \"./Page\";\n\nconst { ccclass, property } = cc._decorator;\n\nexport class PageSavenow extends Page {\n    actions: any\n    props: any\n\n    @property(cc.Node)\n    public btnConfirm: cc.Node = null;\n\n    onLoad() {\n        this.btnConfirm.on(cc.Node.EventType.TOUCH_END, () => {\n            if (this.btnConfirm.getComponent(cc.Button).interactable === false) return;\n\n            this.btnConfirm.getComponent(cc.Button).interactable = false;\n            SoundMgr.playSfx(SoundMgr.Instance.SFX_BUTTON);\n            wsgw.userRequest(APIDefine.hitSaveNowButton, {}, (e) => {\n                store.dispatch(popPage());\n                window.location.href = this.props.deeplinks.data[DeeplinkTypesToName[EDeeplinkTypes.THAM_QUAN_DAU_TU_SAVE_NOW]];\n                this.btnConfirm.getComponent(cc.Button).interactable = true;\n            }, () => {\n                this.actions.pushPopup(EAppPopups.PopupSaveNowOverloaded);\n                this.btnConfirm.getComponent(cc.Button).interactable = true;\n            });\n        });\n    }\n\n    protected onDisable(): void {\n        this.btnConfirm.getComponent(cc.Button).interactable = true;\n    }\n}\nconst mapStateToProps = (state: RootState) => ({\n    user: state.user,\n    deeplinks: state.deeplinks,\n})\nconst mapDispatchToAction = (dispatch: AppDispatch) => ({\n    pushPage: (payload: EAppPages | IPageWithEffect) =>\n        dispatch(pushPage(payload)),\n    popPage: () => dispatch(popPage()),\n    pushPopup: (payload: EAppPopups) => dispatch(pushPopup(payload)),\n})\nexport default connect(mapStateToProps, mapDispatchToAction)(PageSavenow)"]}