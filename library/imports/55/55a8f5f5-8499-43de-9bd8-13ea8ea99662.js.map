{"version":3,"sources":["assets/scripts/src/game/GameMgr.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Events from \"../../common/Events\";\nimport LoadingCover from \"../../common/LoadingCover\";\nimport SoundMgr from \"../../common/SoundMgr\";\nimport TopUI, { EAppTopUIs } from \"../../common/TopUI\";\nimport SingletonNode from \"../../utils/SingletonNode\";\nimport GameDefine from \"../common/GameDefine\";\nimport GiftMgr from \"./GiftsMgr\";\n\nconst { ccclass, property } = cc._decorator;\n\nexport enum GameStates {\n    TUTORIAL = 'TUTORIAL',\n    PLAYING = 'PLAYING',\n    PAUSE = 'PAUSE',\n    END = 'END',\n    SELECT = 'SELECT',\n    ROLLING = 'ROLLING',\n    PICK_UP = 'PICK_UP',\n}\n\n@ccclass\nexport default class GameMgr extends SingletonNode<GameMgr>() {\n    @property(GiftMgr)\n    private GiftMgr: GiftMgr = null;\n\n    private mIsFirstPlay: boolean\n    private gameState: GameStates = GameStates.TUTORIAL;\n    private mPreviousState: GameStates;\n\n    // Score and level\n    private score = -1;\n    private reachedPlanet = -1;\n    private level = 0;\n\n    onLoad() {\n        super.onLoad();\n        this.mIsFirstPlay = false;\n    }\n\n    initEventListeners() {\n        window.addEventListener(\"message\", (event) => {\n            const prefix = typeof event.data === 'string' ? event.data.split('-').shift() : '';\n\n            if (prefix === 'game1SetFirstPlay') {\n                const postFix = typeof event.data === 'string' ? event.data.split('-').pop() : '';\n                this.mIsFirstPlay = postFix === 'true';\n            }\n        });\n    }\n\n    public init() {\n        if (this.mIsFirstPlay) {\n            this.setGameState(GameStates.TUTORIAL)\n            this.mIsFirstPlay = false;\n        }\n        else {\n            this.setGameState(GameStates.PLAYING)\n        }\n\n        this.score = 0;\n        this.reachedPlanet = 0;\n        this.level = 0;\n\n        this.GiftMgr.init();\n    }\n\n    public getLevel() {\n        return this.level;\n    }\n\n    public getScore() {\n        return this.score;\n    }\n\n    public addScore(score) {\n        this.score += score;\n    }\n\n    public getReachedPlanet() {\n        return this.reachedPlanet;\n    }\n\n    public increaseReachedPlanet() {\n        this.reachedPlanet += 1;\n    }\n\n    public getGameState() {\n        return this.gameState;\n    }\n\n    public setGameState(newGameState: GameStates) {\n        this.mPreviousState = this.gameState;\n        this.gameState = newGameState;\n        console.log('Game state: ', newGameState)\n\n\n        switch (this.gameState) {\n            case GameStates.TUTORIAL:\n                break\n            case GameStates.PLAYING:\n                TopUI.Instance.show(EAppTopUIs.CompHeader, true, true)\n                break\n            case GameStates.ROLLING:\n                TopUI.Instance.hideAll()\n                break\n            case GameStates.END:\n                break\n        }\n    }\n\n    update(dt) {\n    }\n\n    pause() {\n        this.setGameState(GameStates.PAUSE)\n        SoundMgr.pauseMusic()\n    }\n\n    resume() {\n        this.setGameState(this.mPreviousState)\n        // SoundMgr.resumeMusic()\n    }\n\n    postMessage(msg: string) {\n        if (!window.parent) {\n            return\n        }\n\n        window.parent.postMessage(msg, '*')\n    }\n\n    replay() {\n        this.init();\n    }\n}\n"]}