{"version":3,"sources":["assets/scripts/utils/LocalizedText.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property, executeInEditMode } = cc._decorator;\nimport Events from \"../common/Events\";\nimport Localization, { LOCALIZATION_ENUM, LOCALIZATION_KEYS, TextTransforms } from \"../common/Localization\";\n\ninterface IKeyParams {\n    [key : string] : string\n}\n@ccclass\n// @executeInEditMode\nexport default class LocalizedText extends cc.Component {\n    // @property({type: LOCALIZATION_ENUM})\n    private KeyIndex: number = 0;\n    @property({ type: TextTransforms }) private TextTransform: number = 0;\n    @property(cc.String)\n    private Key: string = '';\n\n    @property(cc.Vec2)\n    fontSizeEn: cc.Vec2 = new cc.Vec2(0, 0);\n    @property(cc.Vec2)\n    fontSizeVi: cc.Vec2 = new cc.Vec2(0, 0);\n\n    private mDefaultString: string;\n    private keyParams : IKeyParams = null\n\n    onLoad() {\n        //runtime only\n        try {\n            Events.registerEvent(Events.EventLanguageChanged, this.localize.bind(this));\n        } catch (e) { }\n\n        this.mDefaultString = this.node.getComponent(cc.Label).string;\n        // this.getComponent(cc.Label).cacheMode = cc.Label.CacheMode.BITMAP\n    }\n    replaceKeyParam(arg : IKeyParams)\n    {\n        this.keyParams = arg\n        this.localize();\n    }\n    setKey(key : string)\n    {\n        this.Key = key;\n        this.onEnable();\n    }\n    onEnable() {\n        //include edit mode\n        this.Key = this.Key.trim().toUpperCase();\n        if (!this.Key) {\n            if (this.KeyIndex != 0) {\n                this.Key = LOCALIZATION_KEYS[this.KeyIndex] || '';\n            }\n        }\n        else if (this.Key != LOCALIZATION_KEYS[this.KeyIndex]) {\n            const index = LOCALIZATION_KEYS.indexOf(this.Key);\n            this.KeyIndex = index != -1 ? index : 0;\n            this.Key = LOCALIZATION_KEYS[this.KeyIndex] || '';\n        }\n\n        this.localize();\n    }\n    private replaceText(str : string)\n    {\n        if(!this.keyParams) return str\n        let string = str\n        let key = Object.keys(this.keyParams)[0]\n        string = string.split(key).join(this.keyParams[key])\n\n        // string = string.replace(key, this.keyParams[key])\n        // this.keyParams.map(e => {\n        // })\n        return string\n    }\n\n    private localize() {\n        let string = Localization.GetLocalizedString(LOCALIZATION_KEYS[this.KeyIndex]) || this.mDefaultString;\n        string = this.replaceText(string);\n        switch (this.TextTransform) {\n            case TextTransforms.None:\n                break;\n            case TextTransforms.Upper:\n                string = string.toUpperCase();\n                break;\n            case TextTransforms.Lower:\n                string = string.toLowerCase();\n                break;\n        }\n        let txt = this.node.getComponent(cc.Label)\n        txt.string = string;\n        // if(Manager.Instance)\n        // {\n        if ((window as any).language == \"en\" && this.fontSizeEn && this.fontSizeEn.x != 0) {\n            txt.fontSize = this.fontSizeEn.x;\n            if (this.fontSizeEn.y != 0) txt.lineHeight = this.fontSizeEn.y;\n        }\n        else if ((window as any).language == \"vi\" && this.fontSizeVi && this.fontSizeVi.x != 0) {\n            txt.fontSize = this.fontSizeVi.x;\n            if (this.fontSizeVi.y != 0) txt.lineHeight = this.fontSizeVi.y;\n        }\n        // }\n    }\n}\n"]}