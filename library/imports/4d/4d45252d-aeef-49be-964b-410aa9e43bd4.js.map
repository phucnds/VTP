{"version":3,"sources":["assets/scripts/common/ButtonClickEvent.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAA0C;AAEpC,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA8C,oCAAY;IAA1D;QAAA,qEAoDC;QAlDuB,mBAAa,GAAW,GAAG,CAAC,CAAC,oBAAoB;;IAkDzE,CAAC;IAhDG,sBAAI,yCAAW;aAAf,cAAmB,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;aAC9C,UAAgB,KAAK,IAAG,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC,CAAC;;;OADN;IAM9C,wCAAa,GAAb,UAAc,QAAQ;QAClB,oDAAoD;QADxD,iBAcC;QAXG,8BAA8B;QAC9B,MAAM;QACN,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;YACtC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC3B,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;QAC3C,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;QAC1C,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE;QAC7C,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACnB,CAAC;IAED,mCAAQ,GAAR;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;IACrC,CAAC;IAED,iCAAM,GAAN,UAAO,EAAE;QACL,IAAG,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC,EAAC;YACxB,IAAG,CAAC,IAAI,CAAC,YAAY,EAAC;gBAClB,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;gBAClB,IAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAC;oBACf,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;iBACpC;aACJ;SACJ;IACL,CAAC;IAEO,kCAAO,GAAf,UAAgB,QAAkB;QAC9B,iDAAiD;QACjD,IAAG,CAAC,IAAI,CAAC,YAAY,EAAC;YAClB,OAAO;SACV;QACD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,kBAAQ,CAAC,OAAO,CAAC,kBAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAA;QAC9C,QAAQ,IAAI,QAAQ,EAAE,CAAC;IAC3B,CAAC;IAjDmB;QAAnB,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;2DAA6B;IAF/B,gBAAgB;QADpC,OAAO;OACa,gBAAgB,CAoDpC;IAAD,uBAAC;CApDD,AAoDC,CApD6C,EAAE,CAAC,SAAS,GAoDzD;kBApDoB,gBAAgB","file":"","sourceRoot":"/","sourcesContent":["import SoundMgr from \"../common/SoundMgr\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class ButtonClickEvent extends cc.Component \n{\n    @property(cc.Float) ClickInterval: number = 0.5; //-1: one time click\n\n    get Interactive(){ return this.mInteractive; }\n    set Interactive(value){ this.mInteractive = value; }\n\n    private mInteractive: boolean;\n    private mTimer: number;\n\n    registerEvent(callback){\n        // this.node.on(cc.Node.EventType.TOUCH_END, () => {\n\n        //     this.onClick(callback);\n        // });\n        this.node.on(cc.Node.EventType.TOUCH_END, () => {\n            this.onClick(callback);\n        }, this, true);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, () => {\n        }, this, true);\n        this.node.on(cc.Node.EventType.TOUCH_END, () => {\n        }, this, true);\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, () => {\n        }, this, true);\n    }\n\n    onEnable(){\n        this.mInteractive = true;\n        this.mTimer = this.ClickInterval;\n    }\n\n    update(dt){\n        if(this.ClickInterval != -1){\n            if(!this.mInteractive){\n                this.mTimer -= dt;\n                if(this.mTimer < 0){\n                    this.mInteractive = true;\n                    this.mTimer = this.ClickInterval;\n                }\n            }\n        }\n    }\n\n    private onClick(callback: Function){\n        // SoundMgr.playSfx(SoundMgr.Instance.SFX_CLICK);\n        if(!this.mInteractive){\n            return;\n        }\n        this.mInteractive = false;\n        SoundMgr.playSfx(SoundMgr.Instance.SFX_BUTTON)\n        callback && callback();\n    }\n}"]}