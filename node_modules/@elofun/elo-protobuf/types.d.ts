import { Buffer } from 'buffer/';
export declare enum ELOTypes {
    UINT8 = 1,
    UINT16 = 2,
    UINT32 = 3,
    INT8 = 4,
    INT16 = 5,
    INT32 = 6,
    FLOAT = 7,
    BOOL = 8,
    BINARY = 9
}
declare const UINT8 = ELOTypes.UINT8;
declare const UINT16 = ELOTypes.UINT16;
declare const UINT32 = ELOTypes.UINT32;
declare const INT8 = ELOTypes.INT8;
declare const INT16 = ELOTypes.INT16;
declare const INT32 = ELOTypes.INT32;
declare const FLOAT = ELOTypes.FLOAT;
declare const BOOL = ELOTypes.BOOL;
declare const BINARY = ELOTypes.BINARY;
export { UINT8, UINT16, UINT32, INT8, INT16, INT32, FLOAT, BOOL, BINARY };
export declare const ELOSizes: {
    [UINT8]: number;
    [UINT16]: number;
    [UINT32]: number;
    [INT8]: number;
    [INT16]: number;
    [INT32]: number;
    [FLOAT]: number;
    [BOOL]: number;
    [BINARY]: number;
};
export interface IELOSchema {
    [key: string]: ELOTypes | ELOTypes[] | IELOSchema[] | IELOSchema;
}
export interface IELOObject {
    [key: string]: boolean | number | Buffer | IELOObject | Array<boolean | number | IELOObject | any>;
}
