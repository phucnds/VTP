"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgMatchingLocalRoomInfo = void 0;
const message_1 = require("@elofun/elo-protobuf/message");
const EMsgTypes_1 = require("../EMsgTypes");
const buffer_1 = require("buffer/");
const types_1 = require("@elofun/elo-protobuf/types");
class MsgMatchingLocalRoomInfo extends message_1.ELOMessage {
    constructor() {
        super(EMsgTypes_1.EMsgTypes.MSG_MATCHING_LOCAL_ROOM_INFO, {
            localRoomId: types_1.UINT32,
            roomUri: types_1.BINARY,
            gameId: types_1.UINT8,
            gameServer: types_1.BINARY,
            host: {
                userId: types_1.UINT32,
                nickName: types_1.BINARY,
                avatar: types_1.BINARY,
            },
            guest: {
                userId: types_1.UINT32,
                nickName: types_1.BINARY,
                avatar: types_1.BINARY,
            },
            guestReady: types_1.BOOL,
            hostReady: types_1.BOOL,
            isClosed: types_1.BOOL,
        });
        this.localRoomId = 0;
        this.roomUri = buffer_1.Buffer.from('');
        this.gameId = 0;
        this.gameServer = buffer_1.Buffer.from('');
        this.host = {
            userId: 0,
            avatar: buffer_1.Buffer.from(''),
            nickName: buffer_1.Buffer.from(''),
        };
        this.guest = {
            userId: 0,
            avatar: buffer_1.Buffer.from(''),
            nickName: buffer_1.Buffer.from(''),
        };
        this.hostReady = false;
        this.guestReady = false;
        this.isClosed = false;
    }
    reset() {
        this.localRoomId = 0;
        this.roomUri = buffer_1.Buffer.from('');
        this.gameId = 0;
        this.gameServer = buffer_1.Buffer.from('');
        this.host = {
            userId: 0,
            avatar: buffer_1.Buffer.from(''),
            nickName: buffer_1.Buffer.from(''),
        };
        this.guest = {
            userId: 0,
            avatar: buffer_1.Buffer.from(''),
            nickName: buffer_1.Buffer.from(''),
        };
        this.hostReady = false;
        this.guestReady = false;
        this.isClosed = false;
    }
}
exports.MsgMatchingLocalRoomInfo = MsgMatchingLocalRoomInfo;
