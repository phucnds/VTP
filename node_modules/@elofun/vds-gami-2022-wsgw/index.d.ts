export interface IWSGWUserInfo {
    type: string;
    credential: string;
    userId: string;
    clientId: string;
    scopes: string[];
}
export interface IWSGWClient {
    userId: number;
    credential: string;
    checkScope: (scope: string) => boolean;
    getScopes: () => string[] | undefined;
    request: (service: string, api: string, data: any, timeout?: number) => Promise<{
        status: number;
        data: any;
    }>;
    subscribe: (service: string, channel: string, cb?: (data: any) => void) => void;
    auth: (data: {
        credential: string;
        secret: string;
        clientId: string;
        type: string;
    }) => Promise<{
        status: number;
        data: any;
    }>;
    setAuthToken: (token: string) => Promise<IWSGWUserInfo>;
}
export declare const connectWsgw: (ep: string) => Promise<IWSGWClient>;
