"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EloTracking = void 0;
var cross_fetch_1 = __importDefault(require("cross-fetch"));
var uuid = __importStar(require("uuid"));
var hmac_sha256_1 = __importDefault(require("crypto-js/hmac-sha256"));
var EloTracking = /** @class */ (function () {
    function EloTracking() {
        var _this = this;
        this.sendLoop = function () { return __awaiter(_this, void 0, void 0, function () {
            var chunk, events, payload, checksum, res, error_1;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.eventPools.length) {
                            return [2 /*return*/];
                        }
                        if (!this.globalProps.user_id || !this.globalProps.device_id) {
                            return [2 /*return*/];
                        }
                        chunk = this.eventPools.splice(0, 10);
                        events = chunk.map(function (ev) {
                            return __assign(__assign(__assign(__assign({}, _this.globalProps), _this.deviceProps), { user_properties: __assign({}, _this.userProps) }), ev);
                        });
                        payload = JSON.stringify({ events: events });
                        checksum = hmac_sha256_1.default(payload, "" + this.appId).toString();
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, cross_fetch_1.default("https://" + this.apiHost + "/events/" + this.appId, {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json",
                                    checksum: checksum,
                                },
                                body: payload,
                            })];
                    case 2:
                        res = _a.sent();
                        if (res.status !== 200) {
                            // adding back if sending fail
                            chunk.forEach(function (ev) { return _this.eventPools.push(ev); });
                        }
                        return [3 /*break*/, 4];
                    case 3:
                        error_1 = _a.sent();
                        console.error(error_1);
                        // adding back if exception
                        chunk.forEach(function (ev) { return _this.eventPools.push(ev); });
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        }); };
        this.apiHost = "";
        this.appId = "";
        this.eventPools = [];
        this.userProps = {};
        this.userProps = {};
        this.globalProps = {};
        this.sendEvent("start_session", {});
    }
    EloTracking.prototype.init = function (_a) {
        var apiHost = _a.apiHost, appId = _a.appId, version = _a.version;
        this.apiHost = apiHost;
        this.appId = appId;
        this.globalProps = {
            app_version: version,
            session_id: Date.now(),
        };
        setInterval(this.sendLoop, 100);
    };
    EloTracking.prototype.setApiHost = function (host) {
        this.apiHost = host;
    };
    EloTracking.prototype.setUserId = function (userId) {
        this.globalProps["user_id"] = userId;
    };
    EloTracking.prototype.setDeviceId = function (deviceId) {
        this.globalProps["device_id"] = deviceId;
    };
    EloTracking.prototype.setDeviceProperties = function (device) {
        this.globalProps = __assign(__assign({}, this.globalProps), device);
    };
    EloTracking.prototype.setUserProperties = function (props) {
        this.userProps = __assign(__assign({}, this.userProps), props);
    };
    EloTracking.prototype.sendEvent = function (type, eventProps) {
        var ev = {
            event_type: type,
            event_id: uuid.v4(),
            time: Date.now(),
            event_properties: __assign({}, eventProps),
        };
        this.eventPools.push(ev);
    };
    EloTracking.prototype.sendRawEvent = function (ev) {
        this.eventPools.push(ev);
    };
    return EloTracking;
}());
exports.EloTracking = EloTracking;
